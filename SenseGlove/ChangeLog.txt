# Changelog
All notable changes to the SenseGlove Prefabs will be documented in this file.

You are currently using version 0.14

-------------------------------------------------------------------------------------------------------

## [v0.14] - 2017-09-08
Calibration Upgrades and Bug Fixes

### Added
-	oldJointPositions and oldLengths arguments have been added to the CalibrationArgs.
-	whichFingers, a bool[5] argument added to CalibrationArgs, which indicates which of the 5 fingers were calibrated 
-	Calibration Settings can now also be accessed via the inspector, and will be applied when the StartCalibration method is called.

### Changed
-	CalibrationArgs : Renamed jointPositions to newJointPositions.	
-	SenseGlove_Object's OnCalibrationFinished event now fires during the next (Late)Update function, 
	which allows one to access Unity Transform controls.	
-	New internal method to convert from Quaternion to Euler angles, which make the handAngles more reliable.
-	Internal calibration now autmatically assigns old values to fingers that were skipped during calibration. 

### Fixed
-	Bug where Unity would give an error when accessing Transform controls during the CalibrationFinishedEvent.
-	Bug where calling the CalibrateThumb() function would actually calibrate the fingers instead.
-	Bug where picking up objects with the SenseGlove_WireFrame anchor set to Wrist would misplace the object outside of the user's reach. 

-------------------------------------------------------------------------------------------------------

## [v0.13] - 2017-08-24
Major Calibration Upgrades
(https://github.com/Adjuvo/SenseGlove-Unity/wiki/Calibration)

### Added
-	Manual-, Semi-Automatic- and Automatic calibration options.
-	manualCalibrationKey (default RightShift) property for the SenseGlove_KeyBinds, which replaces the fingerCalibrationKey. 

### Changed
-	SenseGlove_Debugger now fires during LateUpdate(), ensuring that it Logs all messages that were sent that frame.
-	Changed the way calibration is handled within the DLL, with architecture that allows for automated procedures.
-	SenseGlove_Object.SemiAutoCalibrateFingers() now starts a semi-automatic calibration sequence. It is possible to specify parameters.
-	SenseGlove_Object.AutoCalibrateFingers() now starts an automated calibration sequence. It is possible to specify parameters.	
-	SenseGlove_Object.CalibrateThumb() method now calls a Semi-Automatic calibration, similar to that of the fingers, the steps for which can be found on the Wiki.
-	SenseGlove_KeyBinds calibrateFingersKey (default LeftShift) now starts a Semi-Automatic calibration sequence.


-------------------------------------------------------------------------------------------------------

## [v0.12] - 2017-08-14
SenseGlove_Detector Fixes

### Added
-	Simple Force Feedback option for the SenseGlove_Physgrab; which sends full brake commands to the SenseGlove whenever its fingertip colliders are touching something.
-	ignorePalm option for SenseGlove_Detector, which allows one to have interactions with fingers only.
-	singleGlove option for SenseGlove, which limits its GloveDetected and GloveRemoved to one, no matter mow many additional grabscripts it detects.

### Changed
-	SenseGlove_physGrab can now only be attached to an object with a SenseGlove_object script attached.
-	SenseGlove_Grabable now has a reference to its grabScript which one can access.
-	The SenseGlove_Detector's GloveRemoved event now only fires if the glove is completely removed from the zone.
-	SenseGlove_Detector's event arguments now include the GrabScript that raised the event(s).

### Fixed
-	Bug where the palm collider did not have a reference to its GrabScript, causing the SenseGlove_Detector to fire its events twice.
-	Bug where a SenseGlove_Detector with activationthresholds > 1 would trigger multiple GloveDetected events.


-------------------------------------------------------------------------------------------------------



## [v0.11] - 2017-08-09
Finger Precision and Bug Fixing

### Added
-	SendBrakeCmd() wrapper for the SenseGlove_Object, which allows one to send a simple PWM command (0...255) to a SenseGlove with brakes.
-	SenseGlove_Detector, which checks how many (colliders of a) SenseGlove are inside an area.
-	rigidFingers option for the SenseGlove_Wireframe, which adds capsule colliders and rigidbodies to the last digits, allowing them to push objects like a VRTK_Button.
-	OnPickup and OnRelease events to the SenseGlove_Grabable script.

### Changed
-	The Kinematic models now take into account the distal transversal arches of the MCP joints and the hand.
-	The twist of the thumb is now dependent on an experimentally determined function, rather than linear interpolation.
-	SenseGlove_Touch now has a reference to its grabscript.

### Fixed
-	Removed the System.Management dependency of the SenseGloveCs library, which would cause build errors in Unity.
	Since this System.Management is not available in MonoDevelop anyway, there are no changes to the Unity Scripts.


-------------------------------------------------------------------------------------------------------


## [v0.10] - 2017-07-27
GloveData and Calibration Upgrades

### Added
-	SenseGlove_Data class, which is a wrapper for the SenseGlove's GloveData. Autmatically converts to Unity Quaternions / Vector3 positions.
-	ToUnityEuler() method to SenseGlove_Util, which converts Euler angles from the SenseGlove's right handed coordinate system to Unity's left handed one.
-	The number of 'sensor packets' per second recieved from the Sense Glove (+/- 100) is now available through SenseGlove_Data.
-	limitFingers and limitWrist options to SenseGlove_Object, which allows one to limit the joint angles of the fingers within realistic contraints.
	However, the wrist limits are not fully functional due to a Gimball lock when converting between Euler and Quaternion angles...
-	UpdateGloveData() method in the SenseGlove_Object to retrieve the latest glove data, which can be moved to the FixedUpdate() if a fixed update rate is desired.


### Changed
-	Renamed Kinematics enumerator to UpdateLevel to allow room for the Kinematics namespace within the DLL.
-	Added GetData() function to SenseGlove_Object, which returns the new GloveData wrapper.
-	Added a warning to scripts using the GetGloveData() method, telling them that a Unity wrapper is available.
-	SenseGlove_Wireframe now makes use of the new SenseGlove_Data wrapper.
-	New way to handle calibration within the DLL, which is called the same way, but does not get stuck.
-	Newly calibrated finger lengths are automatically limited between those of 5th percentile females and 95th percentile males. 
-	To pervent breaking the joint positions, newly calibrated joint positions can now only move a limited amount (20mm) from their previous location.
-	The OnCalibrationFinished event now fires with FingerCalibrationArgs, which contains the new joint positions and finger lengths.
-	A new RescaleHand(float[][]) method for SenseGlove_Wireframe, which shows how to rescale the hand using input from the SenseGlove_Object.GetFingerLengths() method. 

### Fixed
-	Bug where the calibration steps were not properly reset from the Unity Side.
-	Unity crashing because the calibration thread was relying on a while loop.


-------------------------------------------------------------------------------------------------------


## [v0.9] - 2017-07-17
Connection overhaul!

### Added
-	HasFunction() wrapper to SenseGlove_Object in preparation for the force-feedback prototypes.
-	SetStartJointPositions() & GetStartJointPositions() methods to SenseGlove_Object to access MCP/CMC Joint Positions.
-	SenseGlove_Manager; a static class that keeps track of which SenseGlove devices are in use by this project.

### Changed
-	Documentation update; added images for calibration, cleaned up the table of contents.
-	SenseGlove_Physgrab's deprecated (old pickUp) code was removed . 
-	SenseGlove_PhysGrab : Added two new public booleans; thumbFingerCollision and palmFingerCollision, which are used to customize the grab logic.
-	SenseGlove_Grabable now re-applies its isKinematic and useGravity settings to before it was picked up.
-	Prefabs : Palm (R) object will now be renamed to Palm (L) when a left handed SenseGlove is connected.
-	SenseGlove_Debugger has separate booleans for DLL messages (default false) and Unity messages (default true).
-	Overhauled the way the SenseGlove_Object connects to its SenseGlove : Instead of a combination of rightHand / automaticMode,
	the ConnectionMethod Enumerator controls how the glove is connected. (choose from Find Next Glove, Find Next Right/Left Hand, and Hard-Coded via Address. )
-	SenseGlove_Object now has a connectOnStartup option, which can be toggled.

### Fixed
-	Bug where the OnCalibrationFinished event was fired before finger length calculations were finshed.
-	SenseGlove_Wireframe can now only run its setup methods once.
-	SenseGlove_Object will now connect to new gloves after StartUp.

-------------------------------------------------------------------------------------------------------


## [v0.8] - 2017-07-11
Grabscript overhaul

###	Added
-	Get() function to the GloveData.handmodel, which allows the user get the right information without knowledge of Anatomy.
-	SenseGlove_Interactable, an abstract class, activated by the GrabScript, which determines how an object behaves when grabbed by a SenseGlove.
-	SenseGlove_Grabable. attach this to an object that you wish the SenseGlove to pick up.
-	SenseGlove_PhysGrab is no longer responsible for having the grabable object follow. Only the 

### Changed
-	SenseGlove_Touch now only responds to GameObjects with a SenseGlove_Interactable script attached.
-	Documentation Update.

### Fixed
-	The twisting section of the left hand thumb was given the wrong sign (+ instead of -), causing an unnatural looking hand.



## [v0.7] - 2017-07-06
Events and Usability improvements.

### Added
-	SenseGlove_Keybinds script. Add this to any GameObject that has a SenseGlove_Object attached to perform calibration via the keyboard.

### Changed
-	SenseGlove_PhysGrab now keeps track of the velocity of its grabReference, allowing us to throw objects. Angular Veclocity is missing still.
-	SenseGlove_Object now controls which calibration methods are called via the NextCalibrationStep() function.
-	CalibrationFinished event added to SenseGlove_Object, which fires when the finger calibration completes. 
	This is an indication that one's hand model should adjust to the new lengths.
-	GloveLoaded event added to SenseGlove_Object, which fires one all kinematic data has been loaded from the glove.
-	The SenseGlove_Wireframe now only destroys its 'preview' child on StartUp, meaning that developers can safely add other GameObjects to the Wireframe.
-	IMU Compensation is now only applied to gloves with firmware versions of 2.19 and lower. Gloves 12 to 25 should work with any version of the SDK.

### Fixed
-	Bug where the global z coordinate of the hand palm was flipped instead of the local z coordinate, which would occur if the position of the prefab was not (0,0,0).

### Planned
-	The next version of the unitypackage will switch up how the SenseGlove Interacts with other GameObjects: 
	The SenseGlove_Physgrab script will only determine when an interaction with a SenseGlove_Interactable object starts and ends.
	This SenseGlove_Interactables, which will range from grabable objects to Drop Zones to doors, will determine their own behaviour, much like the 
	popular toolkit VRTK.
	These features are planned for release before 17-06-017.

--------------------------------------------------------------------------


## [v0.6] - 2017-06-22
Bug Fixes and GrabScript improvements.

### Changed
-	SenseGlove_PhysGrab can now check if the fingers are 'flexed'. It will no longer attemt to pick up any object with a 'flexed' finger.
-	SenseGlove_PhysGrab is now able to pick up objects between the hand palm and finger as well.

### Fixed
-	SenseGlove will no longer 'stick' to objects wich an open hand, due to the afforementioned 'flex' detection.
-	SenseGloveCs.dll now inverts the y coordinate of its relative position when connected to a left hand.
-	Inverted the Unity z-coordinate of the hand palm model in case of a left hand. This corresponds with the y-coordinate in the SenseGloveCs DLL.


--------------------------------------------------------------------------


## [v0.5] - 2017-06-20
Improvements after first Demo feedback.

### Changed
-	ManualRelease() on the SenseGlove_Physgrab, which will cause it to let go of any object it is holding. The script will no longer pick up any new items for a specified time.
-	The CalibrateWrist method in the SenseGlove_Wireframe() now uses the foreArm model as a reference point.
-	SenseGlove_Physgrab now contains OnGrab and OnRelease events, which can be delegated by other classes.


--------------------------------------------------------------------------


## [v0.4] - 2017-06-15
Physics-Based Grab Script

### Added
-	SenseGlove_Touch Script, used to determine which GameObject if being touched by a collider.
-	SenseGlove_PhysGrab Script, which will pick up objects with a Rigidbody if they are being touched by the thumb and at least one other finger.
	For now, it sets a boolean to true when it picks up an object, and when it releases one. These will be replaced by events later.
-	PhysicsScene as a test for the SenseGlove_PhysGrab Script and SenseGlove_Object on other PCs.
-	WireFrame_Grab Prefab. Similar to the original WireFrame Prefab, but with a properly setup SenseGlove_PhysGrab Script attached.
-	ResetPosition script, as a helpful addition to objects that will be manipulated by the SenseGlove.

### Changed
-	When SenseGlove_WireFrame detects that a SenseGlove_PhysGrab script is attached to the same GameObject, it will automatically create colliders and assign these to the grabscript.
-	SenseGlove_WireFrame now calls CalibrateWrist() function on Setup().

### Fixed
-	The Pickup / Tracking script would fail if trackedObject and WireFrame prefab were not facing the same orientation on Setup(). 	


--------------------------------------------------------------------------


## [v0.3] - 2017-06-13
Improved Tracking

### Changed
-	The SenseGlove Package is now contained in its own folder.
-	Tracking Software now correcly mimics orientation and a proper offset.

### Removed
-	BuildScene, since it will be used to create the prefabs. Separate Scenes showing off each functionality will be added in the future.


--------------------------------------------------------------------------


## [v0.2] - 2017-06-13
Experimental GameObject tracking of the wireframe model.

### Added
-	BuildScene, which serves as an example on how to add a SenseGlove to your scene.
-	GloveTester Script which allows the user to perform wrist calibration and turn the glove / hand models on or off using keybrad keys.
-	AnchorPoint enumerator which determines where the trackedObject connects to.
-	SenseGloveCs.xml file, which contains the (auto-generated) documentation of the SenseGloveCs.dll.

### Changed
-	Wireframe Prefab now has a full preview, including lower arm and (simplified) fingers. The live version now also contains a lower arm.
	All children of the Prefab are assumed to be part of the preview and destroyed on StartUp() except for the Wrist and Lower Arm.
-	SenseGlove_WireFrame now has a public GameObject trackedObject. Its wrist or lower arm will will attempt to follow this object. Still a work in progress.
-	SenseGloveCs.dll now has a defaultValue for GloveStartPosition.


--------------------------------------------------------------------------


## [v0.1] - 2017-06-12
The first iteration of the UnityPackage. Is able to reliably connect to a SenseGlove and see the Kinematics live.

### Added
-	SenseGlove_Object Script, which ensures a proper connection with one SenseGlove and access to its GloveData. 
-	SenseGlove_Debugger Script, which allows one to access the debug messages within the DLL.
- 	SenseGlove_Wireframe Script, which uses the glove- and handPositions on a SenseGlove_Object to create a wireframe model of the hand and animate it.
- 	SenseGlove_Util Script, which contains methods to convert between our Right-Handed coordinate system to Unity's Left-Handed Vector3 and Quaternion classes and vice versa.
	Also contains some ToString methods to get greater decimal precision from Debug.Log.
-	WireFrame Prefab, which uses a SenseGlove_Object and SenseGlove_Wireframe to show the SenseGlove in 3D.
-	Simple Unity Materials to distinguish between the points of the hand/glove, and the segments of the glove/hand.